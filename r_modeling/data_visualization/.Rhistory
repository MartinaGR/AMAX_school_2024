mydata = read.csv("CervicalCancer_Kampala.scv")
mydata = read.csv("CervicalCancer_Kampala.csv")
View(mydata)
summary(mydata)
mydata = read.csv("CervicalCancer_Kampala.csv", stringsAsFactors = FALE)
mydata = read.csv("CervicalCancer_Kampala.csv", stringsAsFactors = FALSE)
summary(mydata)summary(mydata)FALSE
summary(mydata)
mydata = read.csv("CervicalCancer_Kampala.csv", stringsAsFactors = TRUE)
summary(mydata)
mydata = read.csv("CervicalCancer_Kampala.csv", stringsAsFactors = TRUE)
dim(mydata)
summary(mydata)
mydata = read.csv("CervicalCancer_Kampala.csv", stringsAsFactors = TRUE)
dim(mydata)
summary(mydata)
View(mydata)
All_Age_Group = mydata[mydata$AGE_GROUP =="All",]
plot(NUMBER_CASES ~ YEAR, data=mydata)
barplot(mydata$NUMBER_CASES, mydata$YEAR)
barplot(All_Age_Group$NUMBER_CASES, All_Age_Group$YEAR)
barplot(All_Age_Group$NUMBER_CASES, All_Age_Group$YEAR, las=2)
barplot(height=All_Age_Group$NUMBER_CASES, names=All_Age_Group$YEAR)
barplot(height=All_Age_Group$NUMBER_CASES, names=All_Age_Group$YEAR, las=2)
barplot(height=All_Age_Group$NUMBER_CASES, names=All_Age_Group$YEAR, las=2, ylim=c(0,max(All_Age_Group$NUMBER_CASES)+5))
barplot(height=All_Age_Group$NUMBER_CASES, names=All_Age_Group$YEAR, las=2, ylim=c(0,max(All_Age_Group$NUMBER_CASES)+10))
barplot(height=All_Age_Group$NUMBER_CASES, names=All_Age_Group$YEAR, las=2, ylim=c(0,max(All_Age_Group$NUMBER_CASES)))
barplot(height=All_Age_Group$NUMBER_CASES, names=All_Age_Group$YEAR, las=2, ylim=c(0,max(All_Age_Group$NUMBER_CASES)+50))
# The trend of cervical cancer in Kampala from 1993 to 2012
mydata_2012 = mydata[mydata$YEAR =="2012",]
View(mydata_2012)
# The trend of cervical cancer in Kampala from 1993 to 2012
mydata_2012 = mydata[mydata$YEAR =="2012" & mydata$AGE_GROUP != "All",]
barplot(height=All_Age_Group$NUMBER_CASES, names=All_Age_Group$AGE_GROUP,
las=2, ylim=c(0,max(All_Age_Group$NUMBER_CASES)+50))
barplot(height=mydata_2012$NUMBER_CASES, names=mydata_2012$AGE_GROUP,
las=2, ylim=c(0,max(mydata_2012$NUMBER_CASES)+50))
barplot(height=mydata_2012$NUMBER_CASES, names=mydata_2012$AGE_GROUP,
las=2, ylim=c(0,max(mydata_2012$NUMBER_CASES)+10))
pie(mydata_2012$NUMBER_CASES , labels = mydata_2012$AGE_GROUP)
# with ggplot2
mydata_age_group = mydata[mydata$AGE_GROUP != "All",]
# with ggplot2
mydata_age_group = mydata[mydata$AGE_GROUP != "All",]
ggplot(data = mydata_age_group, aes(YEAR, NUMBER_CASES)) +
geom_line(color = "steelblue", size = 1) +
geom_point(color = "steelblue") +
labs(title = "New Marvel characters by alignment & gender",
subtitle = "(limited to characters with more than 100 appearances)",
y = "Count of new characters", x = "") +
facet_wrap(~ AGE_GROUP)
# with ggplot2
library(ggplot2)
mydata_age_group = mydata[mydata$AGE_GROUP != "All",]
ggplot(data = mydata_age_group, aes(YEAR, NUMBER_CASES)) +
geom_line(color = "steelblue", size = 1) +
geom_point(color = "steelblue") +
labs(title = "New Marvel characters by alignment & gender",
subtitle = "(limited to characters with more than 100 appearances)",
y = "Count of new characters", x = "") +
facet_wrap(~ AGE_GROUP)
ggplot(data = mydata_age_group, aes(YEAR, NUMBER_CASES)) +
geom_line(color = "steelblue", size = 1) +
geom_point(color = "steelblue") +
labs(title = "Evolution of Cervical cancer in Women in Kampala for each age group",
y = "Number of cervical cancer cases", x = "") +
facet_wrap(~ AGE_GROUP)
mydata = read.csv("CervicalCancer_Kampala.csv", stringsAsFactors = TRUE)
dim(mydata)
summary(mydata)
# The trend of cervical cancer in Kampala from 1993 to 2012
All_Age_Group = mydata[mydata$AGE_GROUP =="All",]
barplot(height=All_Age_Group$NUMBER_CASES, names=All_Age_Group$YEAR,
las=2, ylim=c(0,max(All_Age_Group$NUMBER_CASES)+50))
# What’s the most affected age group by cervical cancer in Kampala in 2012?
mydata_2012 = mydata[mydata$YEAR =="2012" & mydata$AGE_GROUP != "All",]
barplot(height=mydata_2012$NUMBER_CASES, names=mydata_2012$AGE_GROUP,
las=2, ylim=c(0,max(mydata_2012$NUMBER_CASES)+10), col="slateblue1")
pie(mydata_2012$NUMBER_CASES , labels = mydata_2012$AGE_GROUP)
# Evolution of Cervical cancer in Women in Kampala for each age group
# with ggplot2
library(ggplot2)
mydata_age_group = mydata[mydata$AGE_GROUP != "All",]
ggplot(data = mydata_age_group, aes(YEAR, NUMBER_CASES)) +
geom_line(color = "steelblue", size = 1) +
geom_point(color = "steelblue") +
labs(title = "Evolution of Cervical cancer in Women in Kampala for each age group",
y = "Number of cervical cancer cases", x = "") +
facet_wrap(~ AGE_GROUP)
list = c("pander","ROCR","COUNT","forestmodel","finalfit","knitr","ggplot2")
install.packages(list)
library(pander)
library(ROCR)
library(COUNT)
library(forestmodel)
library(finalfit)
library(knitr)
library(ggplot2)
mydata = read.csv("CervicalCancer_Kampala.csv", stringsAsFactors = TRUE)
dim(mydata)
summary(mydata)
# The trend of cervical cancer in Kampala from 1993 to 2012
All_Age_Group = mydata[mydata$AGE_GROUP =="All",]
barplot(height=All_Age_Group$NUMBER_CASES, names=All_Age_Group$YEAR,
las=2, ylim=c(0,max(All_Age_Group$NUMBER_CASES)+50))
# What’s the most affected age group by cervical cancer in Kampala in 2012?
mydata_2012 = mydata[mydata$YEAR =="2012" & mydata$AGE_GROUP != "All",]
barplot(height=mydata_2012$NUMBER_CASES, names=mydata_2012$AGE_GROUP,
las=2, ylim=c(0,max(mydata_2012$NUMBER_CASES)+10), col="slateblue1")
pie(mydata_2012$NUMBER_CASES , labels = mydata_2012$AGE_GROUP)
# Evolution of Cervical cancer in Women in Kampala for each age group
# with ggplot2
library(ggplot2)
mydata_age_group = mydata[mydata$AGE_GROUP != "All",]
ggplot(data = mydata_age_group, aes(YEAR, NUMBER_CASES)) +
geom_line(color = "steelblue", size = 1) +
geom_point(color = "steelblue") +
labs(title = "Evolution of Cervical cancer in Women in Kampala for each age group",
y = "Number of cervical cancer cases", x = "") +
facet_wrap(~ AGE_GROUP)
my_list <- (name="Jhon", age = 25, grace = c(90,83,21))
my_list <- c(name="Jhon", age = 25, grace = c(90,83,21))
list <- c(name="Jhon", age = 25, grace = c(90,83,21))
my_list <- c(name="Jhon", age = 25, grace = c(90,83,21))
my_list <- (name="Jhon", age = 25, grace = c(90,83,21))
my_list <- c(name="Jhon", age = 25, grace = c(90,83,21))
my_list <- a(name="Jhon", age = 25, grace = c(90,83,21))
my_list <- c(name="Jhon", age = 25, grace = c(90,83,21))
my_list <-(name="Jhon", age = 25, grace = c(90,83,21))
my_list <- (name="Jhon", age = 25, grace = c(90,83,21))
my_list == (name="Jhon", age = 25, grace = c(90,83,21))
my_list = (name="Jhon", age = 25, grace = c(90,83,21))
my_list = list(name="Jhon", age = 25, grace = c(90,83,21))
my_matrix = matrix(1:6, rrow=2, ncol=3, byrow=TI)
my_matrix = matrix(1:6, nrow=2, ncol=3, byrow=TI)
my_matrix = matrix(1:6, nrow=2, ncol=3, byrow=TRUE)
my_matrix = matrix(1:6, nrow=3, ncol=3, byrow=TRUE)
my_matrix = matrix(1:6, nrow=3, ncol=3, byrow=TRUE)
my_matrix
my_data_frama = data.frame(name = c("Papy", "Many", "Tata"))
my_data_frama = data.frame(name = c("Papy", "Many", "Tata"), age= c(65, 70, 25))
View(my_data_frama)
mean(data_vector)
data_vector = c(10,25,15,30,20)
mean(data_vector)
sque = data_vecto^2
sque = data_vector^2
sque
data_vector[5]
subset(my_data_frama, age>30 & gender=="Male")
my_data_frame = my_data_frame + c(gender = c("Male", "Female","Female"))
my_data_frame <- my_data_frame + c(gender = c("Male", "Female","Female"))
my_data_frama = data.frame(name = c("Papy", "Many", "Tata"), age= c(65, 70, 25))
my_data_frame <- my_data_frame + c(gender = c("Male", "Female","Female"))
my_data_frame <- my_data_frame $ c(gender = c("Male", "Female","Female"))
my_data_frame
my_data_frame $ c(gender = c("Male", "Female","Female"))
my_data_frame = data.frame(name = c("Papy", "Many", "Tata"), age= c(65, 70, 25))
my_data_frame $ c(gender = c("Male", "Female","Female"))
my_data_frame = my_data_frame $ c(gender = c("Male", "Female","Female"))
my_data_frame = my_data_frame & c(gender = c("Male", "Female","Female"))
ggplot(diamonds, aes(x=cut) + geom.bar() + facet_wrap(clarity))
library(ggplot2)
ggplot(diamonds, aes(x=cut) + geom.bar() + facet_wrap(clarity))
ggplot(diamonds, aes(x=cut) + geom_bar() + facet_wrap(clarity))
ggplot(diamonds, aes(x=cut) + geom_bar() + facet_wrap(~clarity))
ggplot(diamonds, aes(x=cut) + geom_bar() + facet_wrap(~ clarity))
ggplot(diamonds, aes(x=cut) + geom_bar() + facet_wrap("clarity"))
ggplot(diamonds, aes(x=cut) + geom_bar() + facet_wrap("clarity"))
ggplot(diamonds, aes(x=cut) + geom_bar() + facet_wrap())
ggplot(diamonds, aes(x=cut) + geom_bar())
ggplot(diamonds, aes(x=cut) + geom_bar())
ggplot(diamonds, aes(x=caract) + geom_bar())
ggplot(diamonds, aes(x=caract, y=price) + geom_bar())
ggplot(data = diamonds, aes(x=caract, y=price) + geom_bar())
ggplot(data = diamonds, aes(x=caract, y=price)) + geom_bar())
ggplot(data = diamonds, aes(x=caract, y=price)) + geom_bar()
ggplot(data = diamonds, aes(x=caract, y=price)) + geom_point()
ggplot(data = diamonds, aes(x = carat, y=price)) + geom_point()
diamonds = (data = diamonds, aes(x = carat, y=price)) +
diamonds <- ggplot(data = diamonds, aes(x = carat, y=price)) +
geom_point()
diamonds
diamonds_graph <- ggplot(data = diamonds, aes(x = carat, y=price)) +
geom_point() +
geom_smooth(method = 'lm')
diamonds_graph
ggplot(data = diamonds, aes(x = carat, y=price)) +
geom_point() +
geom_smooth(method = 'lm') +
facet_wrap(~ clarity)
ggplot(data = diamonds, aes(x = carat, y=price)) +
geom_point() +
geom_smooth(method = 'lm')
ggplot(data = diamonds, aes(x = carat, y=price)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) +
geom_point() #+
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) +
geom_point() #+
ggplot(data = longley, aes(x= Year, y= GNP)) +
geom_bar()
ggplot(data = longley, aes(x= "Year", y= "GNP")) +
geom_bar()
ggplot(data = longley, aes(x= "Year", y= "Unemployed")) +
geom_bar()
ggplot(data = longley, aes(x= "Year", y= "Unemployed")) +
geom_point()
ggplot(data = longley, aes(x= "Year", y= "GNP")) +
geom_point()
ggplot(data = longley, aes(x= "Year", y= "GNP")) +
geom_point()
ggplot(data = longley, aes(x= "Year", y= "GNP")) +
geom_point() +
geom_smooth(method = "lm")
longley
DATA <- longley
Dat <- longley
Dat <- data.frame(longley)
longley
ggplot(data = longley, aes(x= "Year", y= "GNP")) +
geom_boxplot()
ggplot(data = longley, aes(x= "Year", y= GNP)) +
geom_boxplot()
ggplot(data = longley, aes(x= Year, y= GNP)) +
geom_boxplot()
ggplot(data = longley, aes(x= Year, y= GNP, color = group)) +
geom_boxplot()
ggplot(data = longley, aes(x= Year, y= GNP, color = GNP)) +
geom_boxplot()
ggplot(data = longley, aes(x= Year, y= GNP)) +
geom_boxplot()
ggplot(data = longley, aes(x= Year, y= GNP)) +
geom_boxplot()
View(Dat)
ggplot(data = longley, aes(x= Year, y= GNP, color = GNP.deflator)) +
geom_boxplot()
dat = data.frame(longley)
ggplot(data = dat, aes(x= Year, y= GNP, color = GNP.deflator)) +
geom_boxplot()
ggplot(data = dat, aes(x= Year, y= GNP, color = GNP.deflator)) +
geom_boxplot()
ggplot(data = dat, aes(x= Year, y= GNP, color = Population)) +
geom_boxplot()
ggplot(data = dat, aes(x= Year, y= GNP, color = Population)) +
geom_boxplot()
ggplot(data = dat, aes(x= Year, y= GNP)) +
geom_boxplot()
ggplot(data = longley, aes(x= Year, y= GNP)) +
geom_boxplot()
ggplot(data = longley, aes(x= Unemployed, y= GNP )) +
geom_boxplot()
ggplot(data = longley, aes(x= Year, y= GNP )) +
geom_boxplot()
Unemployed
Unemployed
GNP
ggplot(data = longley, aes(x= Year, y= GNP)) +
geom_boxplot()
ggplot(data = mydata_age_group, aes(YEAR, NUMBER_CASES)) +
geom_line(color = "steelblue", size = 1) +
geom_point(color = "steelblue") +
labs(title = "Evolution of Cervical cancer in Women in Kampala for each age group",
y = "Number of cervical cancer cases", x = "") +
facet_wrap(~ AGE_GROUP)
ggplot(data = longley, aes(x= Year, y= GNP)) +
geom_line(color = "steelblue", size = 1) +
geom_point(color = "steelblue")
ggplot(data = longley, aes(x= Unemployed, y= GNP)) +
geom_line(color = "steelblue", size = 1) +
geom_point(color = "steelblue")
install.packages("plotly")
library(ploty)
library(plotly)
data("economics")
plot <- plot_ly(data = economics, x = date)
plot <- plotly(data = economics, x = date)
plot <- plot_ly(data = economics, x = ~date)
plot <- plot_ly(data = economics, x = date)
library(plotly)
data("economics")
plot <- plot_ly(data = economics, x = date)
plot <- plotly::plot_ly(data = economics, x = date)
force(economics)
plot <- add.lines(plot, y = pop, name = "Population")
plot <- plotly::plot_ly(data = economics, x = date)
data("economics")
plot <- plotly::plot_ly(data = economics, x = date)
data("economics")
plot <- plot_ly(data = economics, x = date)
install.packages("plotly")
library(plotly)
library(htmltools)
library(plotly)
install.packages("htmltools")
data("economics")
plot <- plot_ly(data = economics, x = date)
library(plotly)
install.packages("htmltools")
library(htmltools)
plotly
library(plotly)
data("economics")
plot <- plot_ly(data = economics, x = date)
plot <- add.lines(plot, y = unemploy, name = "Unemployed")
plot <- add_lines(plot, y = unemploy, name = "Unemployed")
plot <- add_lines(plot, y = psavert, name = "Personal Saving Rate")
plot <- add_lines(plot, y = pop, name = "Population")
plot <- add_lines(plot, y = "pop", name = "Population")
plot <- add_lines(plot, y = "unemploy", name = "Unemployed")
plot <- add_lines(plot, y = "psavert", name = "Personal Saving Rate")
plot <- add_lines(plot, y = "pop", name = "Population")
data("economics")
plot <- plot_ly(data = economics, x = date)
plot <- add_lines(plot, y = "unemploy", name = "Unemployed")
plot <- add_lines(plot, y = "psavert", name = "Personal Saving Rate")
plot <- add_lines(plot, y = "pop", name = "Population")
data("economics")
plot <- plot_ly(data = economics, x = date)
plot <- add_lines(plot, y = "unemploy", name = "Unemployed")
plot <- add_lines(plot, y = "psavert", name = "Personal Saving Rate")
plot <- add_lines(plot, y = "pop", name = "Population")
library(plotly)
data("economics")
plot <- plot_ly(data = economics, x = date)
plot <- add_lines(plot, y = "unemploy", name = "Unemployed")
plot <- add_lines(plot, y = "psavert", name = "Personal Saving Rate")
plot <- add_lines(plot, y = "pop", name = "Population")
View(plot)
library(plotly)
data("economics")
plot <- plot_ly(data = "economics", x = "date")
source("~/GitHub/AMAX_school_2024/r_modeling/data_visualization/Cervical_Cancer.R", echo=TRUE)
install.packages("plotly")
install.packages("plotly")
library(plotly)
data("economics")
plot <- plot_ly(data = economics, x = "date")
plot <- add_lines(plot, y = "unemploy", name = "Unemployed")
plot <- add_lines(plot, y = "psavert", name = "Personal Saving Rate")
plot <- add_lines(plot, y = "pop", name = "Population")
install.packages("plotly")
data("economics")
plot <- plot_ly(data = economics, x = "date")
plot <- add_lines(plot, y = "unemploy", name = "Unemployed")
plot <- add_lines(plot, y = "psavert", name = "Personal Saving Rate")
plot <- add_lines(plot, y = "pop", name = "Population")
data("economics")
plot <- plot_ly(data = economics, x = "date")
plot <- add_lines(plot, y = "unemploy", name = "Unemployed")
data("economics")
plot <- plot_ly(data = economics, x = date)
plot <- add_lines(plot, y = "unemploy", name = "Unemployed")
plot <- add_lines(plot, y = "psavert", name = "Personal Saving Rate")
plot <- add_lines(plot, y = "pop", name = "Population")
data("economics")
plot <- plot_ly(data = economics, x = date) +
plot <- add_lines(plot, y = "unemploy", name = "Unemployed") +
plot <- add_lines(plot, y = "psavert", name = "Personal Saving Rate") +
plot <- add_lines(plot, y = "pop", name = "Population")
View(economics)
plot <- plot_ly(data = economics, x = date)
plot <- add_lines(plot, y = "unemploy", name = "Unemployed")
plot <- add_lines(plot, y = "psavert", name = "Personal Saving Rate")
plot <- plot_ly(data = economics, x = ~date)
plot <- add_lines(plot, y = ~unemploy, name = "Unemployed")
plot <- add_lines(plot, y = ~psavert, name = "Personal Saving Rate")
plot <- add_lines(plot, y = ~pop, name = "Population")
View(plot)
View(plot)
plot
plot
plot <- plot_ly(data = economics, x = date)
plot <- add_lines(plot, y = unemploy, name = "Unemployed")
plot <- add_lines(plot, y = psavert, name = "Personal Saving Rate")
plot <- add_lines(plot, y = pop, name = "Population")
source("~/GitHub/AMAX_school_2024/r_modeling/data_visualization/Cervical_Cancer.R", echo=TRUE)
install.packages("plotly")
plot <- plot_ly(data = economics, x = date)
plot <- add_lines(plot, y = unemploy, name = "Unemployed")
plot <- add_lines(plot, y = psavert, name = "Personal Saving Rate")
plot <- add_lines(plot, y = pop, name = "Population")
plot <- plot_ly(data = economics, x = ~date)
plot <- add_lines(plot, y = ~unemploy, name = "Unemployed")
plot <- add_lines(plot, y = ~psavert, name = "Personal Saving Rate")
plot <- add_lines(plot, y = ~pop, name = "Population")
plot
library(tidyverse)
plot_2 <- economics %>%
plot_ly( x = ~date) %>%
add_lines(plot, y = unemploy, name = "Unemployed") %>%
add_lines(plot, y = psavert, name = "Personal Saving Rate") %>%
add_lines(plot, y = pop, name = "Population")
plot_2 <- economics %>%
plot_ly(economics, x = ~date) %>%
add_lines(plot, y = unemploy, name = "Unemployed") %>%
add_lines(plot, y = psavert, name = "Personal Saving Rate") %>%
add_lines(plot, y = pop, name = "Population")
plot_2 <- economics %>%
plot_ly(economics, x = date) %>%
add_lines(plot, y = unemploy, name = "Unemployed") %>%
add_lines(plot, y = psavert, name = "Personal Saving Rate") %>%
add_lines(plot, y = pop, name = "Population")
plot_2 <- economics %>%
plot_ly(economics, x = date) %>%
add_lines(plot, y = unemploy, name = "Unemployed") %>%
add_lines(plot, y = psavert, name = "Personal Saving Rate") %>%
add_lines(plot, y = pop, name = "Population")
plot_2 <- economics %>%
plot_ly(economics, x = "date") %>%
add_lines(plot, y = "unemploy", name = "Unemployed") %>%
add_lines(plot, y = "psavert", name = "Personal Saving Rate") %>%
add_lines(plot, y = "pop", name = "Population")
View(plot_2)
plot_2
plot_2
plot_2
plot_2
st.seed(123)
set.seed(123)
sample_data <- rnorm(n=30, mean=10, sd=2)
mean_sample <- mean(sample_data)
sigma_know <- 2
sigma_know <- 2
z_stat <- (mean_sample - 10) / (sigma_known / sqrt(30))
p-value <- 2*(1- pnorm(abs(z_stat)))
mean_sample <- mean(sample_data)
sigma_know <- 2
z_stat <- (mean_sample - 10) / (sigma_known / sqrt(30))
sigma_known <- 2
z_stat <- (mean_sample - 10) / (sigma_known / sqrt(30))
p-value <- 2*(1- pnorm(abs(z_stat)))
p_value <- 2*(1- pnorm(abs(z_stat)))
t.test(mtcars$mpg, mu=20)
prop.test(table(iris$Species == "setosa"), p=0.3)
data(iris)
